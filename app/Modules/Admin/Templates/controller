<?php

namespace $NAMESPACE$;

use App\Modules\Admin\Controllers\AdminController;
use Redirect;
use Schema;
use App\Models\$MODEL$;
use App\Modules\Admin\Requests\$CREATEREQUESTNAME$;
use App\Modules\Admin\Requests\$UPDATEREQUESTNAME$;
use Illuminate\Http\Request;
$FILETRAIT$
$RELATIONSHIP_NAMESPACES$
use Prologue\Alerts\Facades\Alert;

class $CLASS$ extends AdminController {

	/**
	 * Display a listing of $PLURAL$
	 *
     * @param Request $request
     *
     * @return \Illuminate\View\View
	 */
	public function index(Request $request)
    {
        $INDEXGET$

		return view('Admin::$SINGULAR$.index', compact('$PLURAL$'));
	}

	/**
	 * Show the form for creating a new $SINGULAR$
	 *
     * @return \Illuminate\View\View
	 */
	public function create()
	{
	    $RELATIONSHIPS$
	    $ENUM$
	    return view('Admin::$SINGULAR$.create'$RELATIONSHIP_COMPACT$);
	}

	/**
	 * Store a newly created $SINGULAR$ in storage.
	 *
     * @param $CREATEREQUESTNAME$|Request $request
     * @return \Illuminate\Http\RedirectResponse
	 */
	public function store($CREATEREQUESTNAME$ $request)
	{
	    $FILESAVING$
		$MODEL$::create($request->all());

        Alert::success(trans('Admin::admin.controller-successfully_created', ['item' => trans('Admin::models.$CLASS$')]))->flash();

        $this->redirectService->setRedirect($request);
        return $this->redirectService->redirect($request);
	}

	/**
	 * Show the form for editing the specified $SINGULAR$.
	 *
	 * @param  int  $id
     * @return \Illuminate\View\View
	 */
	public function edit($id)
	{
		$$SINGULAR$ = $MODEL$::find($id);
	    $RELATIONSHIPS$
	    $ENUM$
		return view('Admin::$SINGULAR$.edit', compact('$SINGULAR$'$RELATIONSHIP_COMPACT_EDIT$));
	}

	/**
	 * Update the specified $SINGULAR$ in storage.
	 *
     * @param $UPDATEREQUESTNAME$|Request $request
	 * @param $id
	 * @return \Illuminate\Http\RedirectResponse
	 */
	public function update($id, $UPDATEREQUESTNAME$ $request)
	{
		$$SINGULAR$ = $MODEL$::findOrFail($id);

        $FILESAVING$

		$$SINGULAR$->update($request->all());

        Alert::success(trans('Admin::admin.controller-successfully_created', ['item' => trans('Admin::models.$CLASS$')]))->flash();

        $this->redirectService->setRedirect($request);
        return $this->redirectService->redirect($request);
	}

	/**
	 * Remove the specified $SINGULAR$ from storage.
	 *
	 * @param $id
     * @return \Illuminate\Http\JsonResponse
	 */
	public function destroy($id)
	{
		$MODEL$::destroy($id);

		return response()->json(null, 204);
	}

    /**
     * Mass delete function from index page
     *
     * @param Request $request
     * @return mixed
     */
    public function massDelete(Request $request)
    {
        if ($request->get('toDelete') != 'mass') {
            $toDelete = json_decode($request->get('toDelete'));
            $MODEL$::destroy($toDelete);
        } else {
            $MODEL$::whereNotNull('id')->delete();
        }

        return redirect()->route(config('admin.route').'.$PLURAL$.index');
    }

}
